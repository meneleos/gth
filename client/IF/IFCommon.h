#ifndef _IFCOMMON_DJRANVX874FJACV_
#define _IFCOMMON_DJRANVX874FJACV_




enum INTERFACE_MESSAGE_FLAG_1
{
	IF_MESSAGE_NONE					=	0,
	IF_MESSAGE_EXIT_CLIENT,
	IF_MESSAGE_STORE_BUY_ITEM,
	IF_MESSAGE_STORE_SELL_ITEM,
	IF_MESSAGE_STORE_BUY_STACK_ITEM,
	IF_MESSAGE_STORE_BUY_SKILL,
	IF_MESSAGE_STORE_CHARGE_RA,
	IF_MESSAGE_STORE_CHARGE_SA,
	IF_MESSAGE_STORE,
	IF_MESSAGE_DELETE_CHARACTER,
	IF_MESSAGE_DELETE_CHARACTER_COMPLETE,		
	IF_MESSAGE_BINDING,
	IF_MESSAGE_SUMMONS,
	IF_MESSAGE_REPAIR_ITEM,
	IF_MESSAGE_EPACK_HOLE_ITEM,
	IF_MESSAGE_ALLREPAIR_ITEM,
	IF_MESSAGE_PCTRADE_REQUEST,
	IF_MESSAGE_PCTRADE_WAITREPLY,
	IF_MESSAGE_PARTY_REQUEST_ORGANIZE,
	IF_MESSAGE_PARTY_REPLY_ORGANIZE,
	IF_MESSAGE_PARTY_REQUEST_JOIN,
	IF_MESSAGE_PARTY_REPLY_JOIN,
	IF_MESSAGE_PARTY_OUT,
	IF_MESSAGE_PARTY_FORCEDOUT,
	IF_MESSAGE_PARTY_DISORGANIZE,
	IF_MESSAGE_USE_PORTAL,
	IF_MESSAGE_LEARN_SKILL,
	IF_MESSAGE_SKILL_LEVEL_UP,
	IF_MESSAGE_RESTART,
	IF_MESSAGE_RESTART_CHARACTER,
	IF_MESSAGE_STOP_QUEST,
	IF_MESSGAE_GM_OK,
	IF_MESSAGE_TRANSFER_WITH_NPC,
	IF_MESSAGE_DEPOT_ITEM,
	IF_MESSAGE_PRECOCITY_ITEM,
	IF_MESSAGE_CRAFT_COMPLETE,
	IF_MESSAGE_BUY_BOOTH_ITEM,
	IF_MESSAGE_DROP_ITEM,
	IF_MESSAGE_UPGRADE_COMPLETE,
	IF_MESSAGE_INITSTATUS,

	
	
	IF_MESSAGE_FRIENDS_REQUEST_INVITE,
	IF_MESSAGE_FRIENDS_REPLY_INVITE,
	IF_MESSAGE_FRIENDS_REQUEST_REMOVE,

	
	IF_MESSAGE_MONSTER_SUMMON,

	
	
	IF_MESSAGE_GUILD_INVITE_CANCEL,
	IF_MESSAGE_GUILD_INVITE_REPLY,
	
	
	IF_MESSAGE_QUESTSCROLL_OBTAIN_PREPARE,
	IF_MESSAGE_QUESTSCROLL_OBTAIN_COMPLETE,
	
	IF_MESSAGE_QUESTSCROLL_ACTIVE,

	
	
	IF_MESSAGE_GUILD_REQUEST_DISORGANIZE1,
	IF_MESSAGE_GUILD_REQUEST_DISORGANIZE2,
	IF_MESSAGE_GUILD_REQUEST_SECEDE,
	IF_MESSAGE_GUILD_REQUEST_BANISH,
	IF_MESSAGE_GUILD_REQUEST_ADD_SUBMASTER,
	IF_MESSAGE_GUILD_REQUEST_ADD_FACTIONMASTER,
	IF_MESSAGE_GUILD_REQUEST_DELETEMASTER,
	IF_MESSAGE_GUILD_REQUEST_CHANGE_MASTER1,
	IF_MESSAGE_GUILD_REQUEST_CHANGE_MASTER2,
	
	IF_MESSAGE_DELETE_MAIL,
	
	IF_MESSAGE_USE_POTION,
	
	
	
	IF_MESSAGE_DAN_BATTLE_SUGGEST_ACCEPT,

	
	IF_MESSAGE_GONRYUN_BATTLE_PRACTICE_GENERATE, 
	IF_MESSAGE_GONRYUN_BATTLE_PRACTICE_BATTING, 

	IF_MESSAGE_GONRYUN_BATTLE_PRACTICE_BATTING_WATEREPLAY,

	
	IF_MESSAGE_TRANSPORT_GOLRYUN_ACCEPT,
	IF_MESSAGE_TRANSPORT_ARAYAN_ACCEPT, 
	IF_MESSAGE_GB_BATTLE_SUGGEST_ACCEPT,
	
	
	
	IF_MESSAGE_POSTPACKAGE_REMAIN_EXIT,
	IF_MESSAGE_USE_EPACK_CHARG_SOUL,

	
	IF_MESSAGE_USE_EVENT_SNOW_ITEM,	
	
	
	IF_MESSAGE_FREE_USER_SELECT_SLOT, 

	
	IF_MESSAGE_MAGIC_BOOK,

	
	IF_MESSAGE_REPLY_LOGIN,

	
	IF_MESSAGE_USE_EVENT_RAIN_ITEM,

	IF_MESSAGE_HELPERSYSTEM_DOYOUWANTME,
	IF_MESSAGE_HELPERSYSTEM_GIVEPOINT,
	IF_MESSAGE_HELPERSYSTEM_DOYOUWANTPORTAL,



	IF_MESSAGE_POSTPACKAGE_SEND,

	
	IF_MESSAGE_DEAD_USE_SKILL,

	
	IF_MESSAGE_MODIFY_OPTION,
	IF_MESSAGE_MODIFY_OPTION_SUCCECS,

	IF_MESSAGE_INIT_AWEAKEN,
	IF_MESSAGE_MODIFY_ITEM_DESTROY,

	

	
	IF_MESSAGE_REQUEST_PC_SUMMON,
	IF_MESSAGE_REQUEST_PC_MOVE_SUMMON,

	
	IF_MESSAGE_REQUEST_NEW_DANBATTLE,
	
};










enum INTERFACE_MESSAGE_FLAG_2
{
	IF_MESSAGE_ITEM_USE_RESERVED=16383,
	
};




enum
{
	MSG_BUTTONTYPE_OKCANCEL			=	0,
	MSG_BUTTONTYPE_OK,
	MSG_BUTTONTYPE_CANCEL,
	MSG_BUTTONTYPE_NONE,
};



typedef struct
{
	D3DXVECTOR4 position;
	DWORD color;
	FLOAT tu, tv;
} IFTEXTUREVERTEX;

#define D3DFVF_IFVERTEX (D3DFVF_XYZRHW|D3DFVF_DIFFUSE|D3DFVF_TEX1)

#define	MAX_COUNT_IF_CONTROL_SPRITE			8
#define	MAX_COUNT_IF_TEXTURE				64


#define	IF_ZPOSITION						0.5


#define	IF_POSITION_LEFT					3000
#define	IF_POSITION_RIGHT					3001
#define	IF_POSITION_TOP						3002
#define	IF_POSITION_BOTTOM					3003
#define	IF_POSITION_CENTER					3004
#define	IF_POSITION_FULL					3005
#define	IF_POSITION_QUARTER_BOTTOM			3006


#define MAX_COUNT_IF_ICON_VERTEX_BUFFER		2048
#define MAX_COUNT_IF_ICON_INFO				256
#define MAX_COUNT_IF_ICON_EACH_TEXTURE		4


enum
{
	IF_TEX_GROUP_ALL		=		0,
	IF_TEX_GROUP_LOGIN,
	IF_TEX_GROUP_GAME,
	IF_TEX_GROUP_LOGO,
	IF_TEX_GROUP_LOADING,
	IF_TEX_GROUP_CHAR,
	IF_TEX_GROUP_NOTICE,

	
	
	IF_TEX_GROUP_JYSTECH_LOGO,
	IF_TEX_GROUP_MAL_LOGO,
	

	NUM_IF_TEX_GROUP
};


enum
{
	IF_ICON_ITEM,
	IF_ICON_SKILL,
	IF_ICON_ETC,

	NUM_IF_ICON_TYPE
};


enum
{
	IF_NOT_IN_POS = 0,
	IF_IN_POS,
	IF_LBDN,
	IF_RBDN,
	IF_LBUP,
	IF_RBUP,
	IF_LBKEEP,
	IF_RBKEEP,
	IF_LBDBCLK,
	IF_RBDBCLK,
};

enum
{
	IF_CTL_NONE,
	IF_CTL_SELECT,
	IF_CTL_EVENT,
	IF_CTL_BEGIN_MOVING,
	IF_CTL_EXIT,
	IF_CTL_KEEP,
};

enum
{
	IF_TEXT_OUTPUT_NORMAL,
	IF_TEXT_OUTPUT_CENTER,
	IF_TEXT_OUTPUT_RIGHT,
	IF_TEXT_OUTPUT_RECT,
	IF_TEXT_OUTPUT_MAIL,
};

enum
{
	IF_NAME_WINDOW_TYPE			=	0,
	IF_CHAR_WINDOW_TYPE,
	IF_ITEM_WINDOW_TYPE,
	IF_CHAT_WINDOW_TYPE,
	IF_HELP_WINDOW_TYPE,
	IF_STORE_WINDOW_TYPE,
	IF_MENU_WINDOW_TYPE,
	IF_SKILL_WINDOW_TYPE,
	IF_QUEST_WINDOW_TYPE,
	IF_OPTION_WINDOW_TYPE,
	IF_TRADE_WINDOW_TYPE,
	IF_STACK_WINDOW_TYPE,
	IF_DLG_WINDOW_TYPE,
	IF_LEARN_WINDOW_TYPE,
	IF_DEPOT_WINDOW_TYPE,
	IF_HOT_WINDOW_TYPE,
	IF_PARTY_WINDOW_TYPE,
	IF_GM_WINDOW_TYPE,
	IF_PRECOCITY_WINDOW_TYPE,
	IF_CRAFT_WINDOW_TYPE,
	IF_UPGRADE_WINDOW_TYPE,
	IF_MAP_WINDOW_TYPE,
	IF_MINI_MAP_WINDOW_TYPE,
	IF_BOOTH_WINDOW_TYPE,
	IF_TUTORIAL_WINDOW_TYPE,
	IF_TIP_WINDOW_TYPE,
	IF_SETTING_WINDOW_TYPE,
	IF_CRAFTHELP_WINDOW_TYPE,
	IF_FRIEND_WINDOW_TYPE,
	IF_QUESTSCROLL_WINDOW_TYPE,
	IF_GUILD_WINDOW_TYPE,
	IF_COMMUNITY_WINDOW_TYPE,
	IF_MAIL_WINDOW_TYPE,
	IF_MAILEDIT_WINDOW_TYPE,
	IF_CHATOPTION_WINDOW_TYPE,
	IF_WORLDCHAT_WINDOW_TYPE,
	IF_GUILDAUTH_WINDOW_TYPE,
	IF_GUILDPVP_WINDOW_TYPE,
	IF_GUILDARENA_WINDOW_TYPE,
	
	IF_AUTOQUEST_WINDOW_TYPE,
	IF_NPCINVENTORY_WINDOW_TYPE,
	
	IF_GUILDARENA_INFO_WINDOW_TYPE,	
	
	IF_SURGERY_WINDOW_TYPE,

	
	IF_EVENT_CRAFT_WINDOW_TYPE,
	
	IF_GONRYUN_BATTLE_PRACTICE_WINDOW_TYPE,
	IF_GONRYUN_BATTLE_PRACTICE_WINDOW_BATTING_TYPE,
	IF_GONRYUN_INFO_WINDOW_TYPE,
	

	
	IF_POST_WINDOW_TYPE,
	IF_MAILBOX_WINDOW_TYPE,
	

	
	IF_BATTLE_TICKET_WINDOW_TYPE,
	IF_SHARE_WINDOW_TYPE,
	IF_TOURNAMENT_WINDOW_TYPE,
	IF_PRIZE_WINDOW_TYPE,
	IF_BATTLE_INFO_WINDOW_TYPE,
	IF_OBSERVER_MENU_WINDOW_TYPE,
	IF_OBSERVER_INFO_WINDOW_TYPE,
	IF_TOURNAMENT_MINI_WINDOW_TYPE,
	
	
	
	IF_WORLD_CHANGE_WINDOW_TYPE,
	
	

	IF_HELPER_WINDOW_TYPE,


	
	IF_GIFT_CARD_WINDOW_TYPE,

	
	IF_CASH_MALLITEM_WINDOW_TYPE,

	
	IF_ITEM_SCROLL_WINDOW_TYPE,

	
	IF_DANWAR_REQUEST_WIN_TYPE,

	
	IF_DANWAR_BATTLE_WIN_TYPE,
	
	
	NUM_IF_WINDOW_TYPE
	
};

enum
{
	IF_BTN_TYPE_DISABLE,
	IF_BTN_TYPE_ENABLE,
	IF_BTN_TYPE_FLASH,
};

#define		MAX_COUNT_IF_HOT_KEY		8

enum
{
	IF_HOTTYPE_SKILL		=	0,
	IF_HOTTYPE_ACTION,
	IF_HOTTYPE_ITEM,
};

enum
{
	IF_CHATMSG_TYPE_NORMAL			=	0,
	IF_CHATMSG_TYPE_PARTY,
	IF_CHATMSG_TYPE_DAN,
	IF_CHATMSG_TYPE_TRADE,
	IF_CHATMSG_TYPE_WHISPER,
	IF_CHATMSG_TYPE_WORLD,
	IF_CHATMSG_TYPE_SYSTEM,
};


typedef struct
{
	char			filename[256];	
	int				group;
	int				texSizeX;
	int				texSizeY;
	int				texID;
} IFTextureInfo_t;


typedef struct
{
	int				ID;
	int				texIndex;		

	int				texCoordX;		
	int				texCoordY;
	
	int				sizeX;			
	int				sizeY;
	
	int				clientX;		
	int				clientY;

	int				parentID;		

	


} IFControlInfo_t;


typedef struct
{
	float			x;
	float			y;
	float			xs;
	float			ys;

	float			texCoordX;
	float			texCoordY;

	int				texIdx;
	
	DWORD			color;
	
} IFIconCtlInfo_t;

#define	MAX_COUNT_CURSOR_BUFFER	1024

typedef struct
{
	int			width;
	int			height;
	BYTE		*buf;
} IFMouseCursorBuffer_t;


typedef struct
{
	BYTE		*buffer;
	int			width;
	int			height;
	int			colormode;

} IFCommonTexture_t;




class CIFControlNode;

class CIFControlNode
{
public:
			CIFControlNode( CIFControlNode *pParentControl = NULL );
			
			
			CIFControlNode( const CIFControlNode &rParentControl )
			{
				*m_pParentControl=*rParentControl.m_pParentControl;
				*m_pNextControl=*rParentControl.m_pNextControl;
				*m_pPrevControl=*rParentControl.m_pPrevControl;
				*m_pChildControl=*rParentControl.m_pChildControl;
			}
			
			CIFControlNode& operator=(const CIFControlNode &rcontrolnode)
			{
				if(this==&rcontrolnode)return *this;
				*m_pParentControl=*rcontrolnode.m_pParentControl;
				*m_pNextControl=*rcontrolnode.m_pNextControl;
				*m_pPrevControl=*rcontrolnode.m_pPrevControl;
				*m_pChildControl=*rcontrolnode.m_pChildControl;
				return *this;
			}
			
	virtual	~CIFControlNode();

			void		AddChildControl( CIFControlNode	*pChildControl );

	virtual	void		SetDevice( LPDIRECT3DDEVICE8 pD3DDevice );
	virtual	void		SetTexManager( CD3DTextureMng *texMng );

	virtual	void		Release();
	virtual	void		UpdateControl();
	virtual	void		PrepareBuffer();
	virtual	void		UpdateBuffer();

protected:
	CIFControlNode			*m_pParentControl;
	CIFControlNode			*m_pNextControl;
	CIFControlNode			*m_pPrevControl;
	CIFControlNode			*m_pChildControl;
};


#include "IFPhysics.h"


#include "IFID.h"
#include "IFText.h"
#include "IFControl.h"
#include "IFIconCtl.h"
#include "IFButtonCtl.h"
#include "IFBarCtl.h"
#include "IFNumCtl.h"
#include "IFComboBox.h"
#include "IFHyperLink.h"
#include "IFScrollBar.h"
#include "IFCheckBox.h"
#include "IFWindow.h"
#include "IFSpinCtl.h"


#include "IFCharacter.h"
#include "IFItemSystem.h"

#include "IFCharacterInventory.h"
#include "IFGame.h"
#include "IFCommunity.h"
#include "IFLoginWin.h"
#include "IFRolloverWin.h"
#include "IFMouseCursor.h"

#include "..\Guild\IFPactMarkManager.h"
#include "EventCraftSystem.h"
#include "..\Game\GolryunBattle\IFGolryunBattle.h"
#include "..\Game\IFHelperWin.h"


#include "Item_ScrollWin.h"



#include "../Terra ICT/GIFT CARD/IFGiftCardWin.h"

#endif

